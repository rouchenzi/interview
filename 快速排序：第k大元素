问题：在数组中找到第 k 大的元素；你可以交换数组中的元素的位置；要求时间复杂度为O(n)，空间复杂度为O(1)。
lintcode:
思路：
（1）快速排序
（2）降序排列
（3）第1大=索引为0的位置，所以第k大在数组中找的是第k-1个数，即在第一个递归中输入的target为k-1
（4）最后两步与快排不同；注意right和left的最终位置；❤️ 注意需要 return，最后一步return代表k刚好在本层的mid位置
if k <= right: 
  return self.findK(nums, start, right, k)
if k >= left:
  return self.findK(nums, left, end, k)
        
return nums[k]  
  
  
