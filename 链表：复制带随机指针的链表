问题：给出一个链表，每个节点包含一个额外增加的随机指针可以指向链表中的任何节点或空的节点。返回一个深拷贝的链表

思路：
  1.需要先建立起完整链表，先建立next。如果直接建立random，可能会无法在新链表中找到，而且指针会乱
  2.此题很难理解，重点再看看
  3.结合二叉树克隆，图上的克隆复习

代码：

class Solution:
    # @param head: A RandomListNode
    # @return: A RandomListNode
    def copyRandomList(self, head):
        # write your code here
        
        nhead = RandomListNode(head.label)
        
        copymap = {}
        copymap[head] = nhead
        
        p = head
        q = nhead
        while p != None:
            q.random = p.random
            if p.next != None:
                q.next = RandomListNode(p.next.label)
                copymap[p.next] = q.next
            else:
                q.next = None
            
            p = p.next
            q = q.next
        
        p = nhead
        while p != None:
            if p.random != None:
                p.random = copymap[p.random]
            
            p = p.next    
    
        return nhead
