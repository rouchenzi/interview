问题：假设你正在爬楼梯，需要n步你才能到达顶部。但每次你只能爬一步或者两步，你能有多少种不同的方法爬到楼顶部？
------------------------------------------------------------------------------------------------
lintcode链接：https://www.lintcode.com/problem/climbing-stairs/description?_from=ladder&&fromId=6
------------------------------------------------------------------------------------------------
思路：1.考虑爬到第n层时，有两种办法：从n-1层爬一个台阶 & 从n-2层爬两个台阶；同理，爬到n-1层时，有两种办法：从n-2层爬一个台阶 & 从n-3层爬两个台阶；即f(n) = f(n-1)+f(n-2)
2.result=[1,2]作为初始值，分别代表爬到第一层和第二层的方法；3.循环从n=3开始，result[3] = result[1]+result[2], 即result.append(result[-1]+result[-2])
4. 最终返回result[-1]，代表爬到第n层的方法

